version: '3.8'
services:
#
#  nginx
#
  nginx:
    container_name: nginx
    hostname: nginx
    #image: ${NGINX_IMAGE}
    build: 
      context: ${NGINX_BUILD}
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    volumes:
     - ${WEB_ROOT}:/app/:rw
     - ${NGINX_LOG_DIR}:/usr/local/openresty/nginx/logs
     - ${NGINX_CONFD_DIR}:/usr/local/openresty/nginx/conf
    ports:
     - "${NGINX_HTTP_HOST_PORT}:80"
     - "${NGINX_HTTPS_HOST_PORT}:443"
    links:
     - php-fpm:fpm
     - fastdfs:fastdfs
    privileged: true
    environment:
     - TZ= ${TZ}
     - NGINX_HOST= ${NGINX_HOST}
     - NGINX_PORT= ${NGINX_PORT}
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 150M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888//nginx-status"]
      interval: 1m10s
      timeout: 5s
      retries: 3
    #sysctls:
    #  net.core.somaxconn: 10240
    #  net.ipv4.tcp_syncookies: 0
    logging:
      driver: "json-file"
      options:
        max-size: "2000M"
        max-file: "10"
    depends_on:
     - php-fpm
    networks:
     - ${NETWORK_NAME}
#
#  PHP
#
  php-fpm:
    container_name: php-fpm
    hostname: php-fpm
    #image: ${PHP_IMAGE}
    build:
      context: ${PHP_BUILD}
      #args:
    privileged: true
    environment:
     - TZ= ${TZ}
    volumes:
     - ${WEB_ROOT}:/app/:rw
     - ${PHP_INI_FILE}:/usr/local/etc/php/conf.d/php.ini:ro    #php.ini dir
     #- ./php/php-fpm.d/jinr.conf:/usr/local/etc/php-fpm.d/www.conf:ro
     - ${PHP_FPM_FILE}:/etc/php/php-fpm.conf:ro  #Dockerfile-php56 FROM alpine:3.3 
     #- ./fpm.log:/usr/local/php/var/log/php-fpm.log
     - ${LOGS}/${PHP_LOGS_DIR}:/usr/local/var/log/:rw
     - ${LOGS}/${PHP_SYSLOGS_DIR}:/var/log/:rw
    links:
     - mysql:mysql
     - redis:redis
     - fastdfs:fastdfs
    ports:
     - "${PHP_HOST_PORT}:9000"
    restart: always
    depends_on:
     - redis
     - mysql
    networks:
     - ${NETWORK_NAME}
#
#   mysql
#
  mysql:
    container_name: mysql
    hostname: mysql
    #images: ${MYSQL_IMAGE}
    command: 
      - --default-authentication-plugin=${DEFAULT_AUTHENTICATION_PLUGIN}
    build: 
      context: ${MYSQL_BUILD}
      #args:
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    ports: 
     - "${MYSQL_HOST_PORT}:3306"
    restart: always
    volumes:
     - ${MYSQL_DATA}:/var/lib/mysql/
     - ${MYSQL_CONF_FILE}:/etc/my.cnf
    networks:
     - ${NETWORK_NAME}
#
#  redis
#
  redis:
    container_name: redis
    hostname: redis
    image: ${REDIS_IMAGE}
    #build: 
      #context: ${REDIS_BUILD}
      #args:
    privileged: true
    environment:
      - TZ= ${TZ} 
      - REDIS_CONF=on
      - REQUIRE_PASS=${REQUIRE_PASS}
      - MASTER_AUTH=${MASTER_AUTH}
      - MAXCLIENTS_NUM=${MAXCLIENTS_NUM}
      - MAXMEMORY_SIZE=${MAXMEMORY_SIZE}
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_DATA=${REDIS_DATA}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${REDIS_DATA}:/data/redis:Z
      - ${REDIS_LOGS}:/data/logs
    restart: always
    ports:
      - '${REDIS_HOST_PORT}:6379'
    networks:
      - ${NETWORK_NAME}
#
#  FastDFS
#
  fastdfs:
    container_name: fastdfs
    hostname: fastdfs
    #images: ${FASTDFS_IMAGE}
    build:
      context: ${FASTDFS_BUILD}
      #args:
    restart: always
    privileged: true
    environment:
      - TZ= ${TZ}
      - TRACKER_SERVER_IP_ADDRESS=${FASTDFS_IP_ADDR}
      - STORAGE_SERVER_PORT=23000
      - NGINX_WEB_PORT=80
    volumes:
      - ${FASTDFS_DATA}:/storage/images/data
    #network_mode: 'host'
    ports:
      - '${FASTDFS_STORAGE_HOST_PORT}:23000'
      - '${FASTDFS_TRACKER_HOST_PORT}:22122'
    networks:
      jinr-dnmp-net:
        ipv4_address: ${FASTDFS_IP_ADDR}
#
#  Network
#
networks:
  jinr-dnmp-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${PROJECT_SUBNET}

